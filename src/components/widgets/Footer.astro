---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';

import { getHomePermalink } from '~/utils/permalinks';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  footNote?: string;
  theme?: string;
}

const { socialLinks = [], secondaryLinks = [], links = [], footNote = '', theme = 'dark' } = Astro.props;
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t dark:border-gray-200 border-slate-800 not-prose']}>
  <div class="dark:bg-lime absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative mx-auto px-4 sm:px-6 dark:text-dark-lime">
    <div class="grid grid-cols-1 md:grid-cols-12 gap-2 gap-y-4 sm:gap-4 py-6 md:py-10">
      <div class="col-span-12 md:col-span-3 flex justify-center">
        <div class="mb-2">
          <a class="inline-block font-bold text-xl" href={getHomePermalink()}>
            <Image src="~/assets/images/qompa-text.png" alt="Qompa" width={180} />
          </a>
        </div>
        <div class="text-sm text-muted flex gap-1">
          {
            secondaryLinks.map(({ text, href }, index) => (
              <>
                {index !== 0 ? ' · ' : ''}
                <a
                  class="text-muted hover:text-gray-700 dark:text-dark-lime hover:underline transition duration-150 ease-in-out"
                  href={href}
                  set:html={text}
                />
              </>
            ))
          }
        </div>
      </div>
      {
        links.map(({ title, links }) => (
          <div class="col-span-12 md:col-span-3 lg:col-span-2 flex justify-center">
            <div class="dark:text-dark-lime font-medium mb-2">{title}</div>
            {links && Array.isArray(links) && links.length > 0 && (
              <ul class="text-sm">
                {links.map(({ text, href, ariaLabel }) => (
                  <li class="my-3">
                    <a
                      class="text-muted hover:text-gray-700 hover:underline dark:text-dark-lime transition duration-150 ease-in-out"
                      href={href}
                      aria-label={ariaLabel}
                    >
                      <Fragment set:html={text} />
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))
      }
      
      <div class="col-span-12 md:col-span-3 lg:col-span-2 flex justify-center mt-5">
        <div class="col-span-12">
          <p class="flex w-full md:text-xs whitespace-nowrap">Encuéntranos en nuestras redes</p>
          {
            socialLinks?.length ? (
              <ul class="flex w-full mb-4 justify-center">
                {socialLinks.map(({ ariaLabel, href, text, icon }) => (
                  <li>
                    <a
                      class="text-muted dark:text-dark-lime hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none dark:hover:text-lime focus:ring-2 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                      aria-label={ariaLabel}
                      href={href}
                    >
                      {icon && <Icon name={icon} class="w-8 h-8" />}
                      <Fragment set:html={text} />
                    </a>
                  </li>
                ))}
              </ul>
            ) : (
              ''
            )
          }
        </div>
      </div>
    </div>
  </div>
</footer>
